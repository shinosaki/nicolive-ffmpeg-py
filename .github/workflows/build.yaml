name: Build and Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --name cli cli.py
        shell: ${{ (runner.os == 'Windows') && 'cmd' || 'bash' }}

      - name: Archive output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-cli
          path: dist/cli${{ (runner.os == 'Windows') && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: Linux-cli
          path: artifacts/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows-cli
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: build with actions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
